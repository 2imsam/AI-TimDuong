<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHYAAACOCAIAAABrBGsyAAAABGdBTUEAALGPC/xhBQAAAw1JREFUeF7t
        18tLVGEch/H+w5bdocwsDTOTIly0CVoEgVl5Ge+aGQTtMyvDTRBFLYJSUsS8jeOY2drppXMYpoMiCg++
        E8/Dd+Ecf7P5MAx6pGRwEuNJjCcxnsR4EuNJjCcxnsR4EuNJjCcxnsR4EuNJjCcxnsR4EuNJjCcxnsR4
        EuNJjCcxnsR4EuNJjCcxnsR4EuNJjCcxnsR4EuNJjCcxnsR4EuNJjCcxnsR4EuNJjCcxXtUQL/woNN0c
        uNicC8sNTmxvp8/jrzqIFxbXzzY8OnrybnkdfS+qRbkKiBeXihnfZJ3941WhHDvx4nLx3OWODG55XQMv
        07uIi5p4eWWjZnffZN3RK8dLvLK6cb6xMwO643JDE+l7oixS4pX8z9rGrgxl2LGatsyTZD0RK8dInF/b
        rL2yg++ZSw/nF9ZGn01lnifrHX6Vvj+yoiPOFzbrmrozfGGn6x7MzeeTm8Enk5nfJusbeZ0cRFVcxGuF
        X3VXcxm4sFN17XPzq+nR38I3Q+YmWf/j6JQjIi4Ut8J/bhmyZJNTX9Kjihpv9GfOkg2Mvkkv4igW4vXi
        Vv21ngxWee/eT6d3FV2/NZI5Ky98k6RHERQFcXHjd33Lrr5h+yUOGxp7m94ddlEQ37n3PAOU2QGIwz5+
        nk1PD7VYPsUNLb2VOqcutFf+3bYncXPrYPnnZMNP/RT/W6Xyidr709+XW2+Plb32JP7wabazb7z8Mh7f
        UCzEoUT5eE3b15nF8HK/xNvbpUQ5Kt9QRMShoPxtZin5eb/E4UlQ3vHycIuLuLIDEMeZxHgS40mMJzGe
        xHgS40mMJzGexHgS40mMJzGexHgS40mMJzGexHgS40mMJzGexHgS40mMJzGexHgS40mMJzGexHgS40mM
        JzFevMT/TRLjSYwnMZ7EeBLjSYwnMZ7EeBLjSYwnMZ7EeBLjSYwnMZ7EeBLjSYwnMZ7EeBLjSYwnMZ7E
        eBLjSYwnMZ7EeBLjSYwnMZ7EeBLjSYwnMZ7EeBLjSYwnMZ7EeBLjSYwnMZ7EeBLjSQxXKv0BBH4BRne4
        EvsAAAAASUVORK5CYII=
</value>
  </data>
</root>